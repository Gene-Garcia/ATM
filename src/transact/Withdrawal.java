/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package transact;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;

/**
 *
 * @author Denzel
 */
public class Withdrawal extends javax.swing.JFrame {

    /**
     * Creates new form Withdrawal
     */
    Connection con;
    Statement stmt;
    ResultSet rs;

    public Withdrawal() {
        initComponents();
        doConnect();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    public void doConnect() {
        try {
            String host = "jdbc:derby://localhost:1527/LEZNED";
            String uName = "Lezned";
            String pass = "kimi";
            con = DriverManager.getConnection(host, uName, pass);
            stmt = con.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_UPDATABLE);
            String sql = "SELECT * FROM APP.CUSTOMER_DATA";
            rs = stmt.executeQuery(sql);

        } catch (SQLException err) {
            JOptionPane.showMessageDialog(this, err);
        }
    }

    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jbtnConfirm = new javax.swing.JButton();
        jlblWithdraw = new javax.swing.JLabel();
        jlblPIN = new javax.swing.JLabel();
        jpfPINField = new javax.swing.JPasswordField();
        jtxtfAmount = new javax.swing.JTextField();
        jbtnCancel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);

        jbtnConfirm.setText("Confirm");
        jbtnConfirm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnConfirmActionPerformed(evt);
            }
        });

        jlblWithdraw.setText("Amount to be Withdrawn:");

        jlblPIN.setText("PIN:");

        jpfPINField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jpfPINFieldActionPerformed(evt);
            }
        });

        jbtnCancel.setText("Cancel");
        jbtnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnCancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jlblWithdraw)
                .addGap(18, 18, 18)
                .addComponent(jtxtfAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(113, 113, 113)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jbtnConfirm)
                        .addGap(69, 69, 69)
                        .addComponent(jbtnCancel))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jlblPIN)
                        .addGap(18, 18, 18)
                        .addComponent(jpfPINField, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(70, 70, 70)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jlblWithdraw))
                    .addComponent(jtxtfAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(42, 42, 42)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jlblPIN))
                    .addComponent(jpfPINField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(64, 64, 64)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbtnCancel)
                    .addComponent(jbtnConfirm))
                .addGap(4, 4, 4))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    int pinReal = 1234;
    private void jbtnConfirmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnConfirmActionPerformed
        try {
            int account = 2018001;
            double withdrawal = Double.parseDouble(jtxtfAmount.getText());
            int pin = Integer.parseInt(String.valueOf(jpfPINField.getPassword()));
            rs = stmt.executeQuery("SELECT * FROM APP.CUSTOMER_DATA WHERE CARD_NUMBER = " + account);
            rs.first();
            int pindb = rs.getInt("PIN");
            if (pin == pindb) {
                if (withdrawal >= 200 && withdrawal <= 10000) {
                    double currBal = rs.getDouble("OUTSTANDING_BALANCE");
                    double newBal = currBal - withdrawal;
                    rs.updateDouble("OUTSTANDING_BALANCE", newBal);
                    rs.updateRow();
                    JOptionPane.showMessageDialog(this, "Transaction Complete");
                    JOptionPane.showMessageDialog(this, "New Balance: " + rs.getDouble("OUTSTANDING_BALANCE"));
                } else if (withdrawal < 200) {
                    JOptionPane.showMessageDialog(this, "Less than the Withdrawal Limit Please Try Again");
                } else if (withdrawal > 10000) {
                    JOptionPane.showMessageDialog(this, "Exceeded the Maximum Withdrawal Limit Please Try Again.");
                }
            } else {
                JOptionPane.showMessageDialog(this, "Incorrect pin Please Try Again");
            }
            this.dispose();
            new MainMenu().setVisible(true);
        } catch (SQLException err) {
            JOptionPane.showMessageDialog(this, err);
        }
    }//GEN-LAST:event_jbtnConfirmActionPerformed

    private void jpfPINFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jpfPINFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jpfPINFieldActionPerformed

    private void jbtnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnCancelActionPerformed
        JOptionPane.showMessageDialog(this, "Cancelling Transaction. Please Wait");
        this.dispose();
        new MainMenu().setVisible(true);
    }//GEN-LAST:event_jbtnCancelActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Withdrawal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Withdrawal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Withdrawal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Withdrawal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Withdrawal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jbtnCancel;
    private javax.swing.JButton jbtnConfirm;
    private javax.swing.JLabel jlblPIN;
    private javax.swing.JLabel jlblWithdraw;
    private javax.swing.JPasswordField jpfPINField;
    private javax.swing.JTextField jtxtfAmount;
    // End of variables declaration//GEN-END:variables
}
